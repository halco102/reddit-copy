app:
  version: 1.0.0
logging:
  level:
    org.springframework.web: DEBUG
spring:
  server.port: ${8082:PORT}

  servlet:
    multipart:
      max-file-size: 25MB
      max-request-size: 25MB


  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVER}
    consumer:
      group-id: halco
    listener:
      ack-mode: RECORD
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


  h2:
    console:
      enabled: false
      path: /h2

  datasource:

    driver-class-name: org.postgresql.Driver
    platform: postgres

    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

    #end postgres conf

    #h2
    #url: jdbc:h2:mem:testReditDB;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;
    #username: sa
    #password: password
    #driverClassName: org.h2.Driver
    #end h2 datasource conf

  flyway:
    enabled: true

    #deployed postgres
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}

    locations: classpath:db/migration
    check-location: true
    baseline-on-migrate: false
    driverClassName: org.postgresql.Driver

  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher

  ### SMTP ###
  mail:
    host: smtp.office365.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    protocol: smtp





#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQL92Dialect
#    defer-datasource-initialization: true
#    hibernate:
#      ddl-auto: none

cloudinary-api-key: ${CLOUDINARY_API_KEY}
cloudinary-secret-key: ${CLOUDINARY_SECRET_KEY}
cloudinary-name: ${CLOUDINARY_NAME}
jwt-secret-key: ${JWT_SECRET_KEY}
verify-email-url: ${VERIFY_EMAIL_URL}




